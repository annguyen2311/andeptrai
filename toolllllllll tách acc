import tkinter as tk
from tkinter import filedialog, messagebox, ttk
from tkinter import PhotoImage

# Hàm đếm tài khoản trong file
def count_accounts(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            lines = f.readlines()
            return len(lines)
    except Exception as e:
        messagebox.showerror("Lỗi", f"Không thể đọc file: {str(e)}")
        return 0

# Hàm đọc file cookies
def read_cookie_file(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            cookies = f.readlines()
        return [cookie.strip() for cookie in cookies]
    except Exception as e:
        messagebox.showerror("Lỗi", f"Không thể đọc file: {str(e)}")
        return []

# Hàm kiểm tra cookie trùng nhau
def check_duplicate_cookies(cookies):
    seen = set()
    duplicates = []
    for cookie in cookies:
        if cookie in seen:
            duplicates.append(cookie)
        else:
            seen.add(cookie)
    return duplicates

# Hàm kiểm tra tài khoản trùng nhau
def check_duplicate_accounts(accounts):
    seen = set()
    duplicates = []
    for account in accounts:
        if account in seen:
            duplicates.append(account)
        else:
            seen.add(account)
    return duplicates

# Hàm chọn file đầu vào
def select_input_file():
    input_file = filedialog.askopenfilename(title="Chọn file đầu vào", filetypes=[("Text Files", "*.txt")])
    if input_file:
        input_file_label.config(text=input_file)
        file_type = determine_file_type(input_file)
        if file_type == 'account':
            accounts = read_account_file(input_file)
            duplicate_accounts = check_duplicate_accounts(accounts)
            if duplicate_accounts:
                messagebox.showinfo("Tài khoản trùng", f"Có {len(duplicate_accounts)} tài khoản trùng nhau: \n" + "\n".join(duplicate_accounts))
                duplicate_count_label.config(text=f"Số lượng tài khoản trùng: {len(duplicate_accounts)}")
            else:
                messagebox.showinfo("Không có tài khoản trùng", "Không có tài khoản nào trùng nhau trong file.")
                duplicate_count_label.config(text="Số lượng tài khoản trùng: 0")
            # Cập nhật số tài khoản
            account_count = count_accounts(input_file)
            account_count_label.config(text=f"Số tài khoản trong file: {account_count}")
        elif file_type == 'cookie':
            cookies = read_cookie_file(input_file)
            duplicates = check_duplicate_cookies(cookies)
            if duplicates:
                messagebox.showinfo("Cookie Trùng", f"Có {len(duplicates)} cookie trùng nhau: \n" + "\n".join(duplicates))
                duplicate_count_label.config(text=f"Số lượng cookie trùng: {len(duplicates)}")
            else:
                messagebox.showinfo("Không có cookie trùng", "Không có cookie nào trùng nhau trong file.")
                duplicate_count_label.config(text="Số lượng cookie trùng: 0")
        else:
            messagebox.showerror("Lỗi", "Không xác định được loại file.")

# Hàm chọn file đầu ra
def select_output_file():
    output_file = filedialog.asksaveasfilename(defaultextension=".txt", title="Chọn file đầu ra", filetypes=[("Text Files", "*.txt")])
    if output_file:
        output_file_label.config(text=output_file)

# Hàm tách tài khoản và lưu vào file mới
def split_accounts():
    input_file = input_file_label.cget("text")
    output_file = output_file_label.cget("text")
    try:
        start_account = int(start_entry.get())
        end_account = int(end_entry.get())
        
        # Kiểm tra số tài khoản hợp lệ
        if start_account < 1 or end_account < 1 or start_account > end_account:
            raise ValueError("Số tài khoản không hợp lệ!")
        
        with open(input_file, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        # Kiểm tra phạm vi tài khoản
        if end_account > len(lines):
            raise ValueError("Phạm vi tài khoản vượt quá số tài khoản trong file.")
        
        selected_accounts = lines[start_account - 1:end_account]
        
        with open(output_file, 'w', encoding='utf-8') as f:
            f.writelines(selected_accounts)
        
        messagebox.showinfo("Thành công", f"Tách tài khoản thành công! Đã lưu vào {output_file}.")
    
    except Exception as e:
        messagebox.showerror("Lỗi", f"Đã xảy ra lỗi: {str(e)}")

# Hàm xác định loại file (tài khoản hoặc cookie)
def determine_file_type(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            first_line = f.readline().strip()
            if first_line.startswith("cookie"):  # Giả sử cookies có định dạng đặc biệt
                return 'cookie'
            else:
                return 'account'
    except Exception as e:
        messagebox.showerror("Lỗi", f"Không thể đọc file: {str(e)}")
        return None

# Hàm đọc file tài khoản
def read_account_file(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            accounts = f.readlines()
        return [account.strip() for account in accounts]
    except Exception as e:
        messagebox.showerror("Lỗi", f"Không thể đọc file: {str(e)}")
        return []

# Hàm xóa các tài khoản trùng trong file
def remove_duplicates_from_file():
    input_file = input_file_label.cget("text")
    try:
        with open(input_file, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        # Xóa trùng
        seen = set()
        unique_lines = []
        for line in lines:
            if line not in seen:
                unique_lines.append(line)
                seen.add(line)
        
        # Lưu lại file mới mà không có tài khoản trùng
        with open(input_file, 'w', encoding='utf-8') as f:
            f.writelines(unique_lines)
        
        messagebox.showinfo("Thành công", "Đã xóa các tài khoản trùng khỏi file.")
    
    except Exception as e:
        messagebox.showerror("Lỗi", f"Đã xảy ra lỗi khi xóa tài khoản trùng: {str(e)}")

# Giao diện chính
root = tk.Tk()
root.title("Công Cụ Tách Tài Khoản & Kiểm Tra Cookie Trùng")
root.geometry("500x600")  # Cài đặt kích thước cửa sổ
root.config(bg="#f0f0f0")

# Logo (Nếu muốn có logo, tải ảnh vào thư mục hiện tại và thay 'logo.png' thành tên tệp ảnh của bạn)
# logo_image = PhotoImage(file="logo.png")
# root.iconphoto(True, logo_image)

# Khung chọn file đầu vào
frame_input = ttk.LabelFrame(root, text="Chọn File Đầu Vào", padding="20")
frame_input.pack(fill="both", padx=10, pady=10)

input_file_label = ttk.Label(frame_input, text="Chưa chọn file đầu vào", width=50, anchor="w", background="#ffffff")
input_file_label.pack(pady=5)
select_input_button = ttk.Button(frame_input, text="Chọn File Đầu Vào", command=select_input_file)
select_input_button.pack(pady=5)

# Hiển thị số tài khoản và cookie trùng
account_count_label = ttk.Label(frame_input, text="Số tài khoản: 0", width=50, anchor="w")
account_count_label.pack(pady=5)

duplicate_count_label = ttk.Label(frame_input, text="Số lượng tài khoản trùng: 0", width=50, anchor="w")
duplicate_count_label.pack(pady=5)

# Khung chọn file đầu ra
frame_output = ttk.LabelFrame(root, text="Chọn File Đầu Ra", padding="20")
frame_output.pack(fill="both", padx=10, pady=10)

output_file_label = ttk.Label(frame_output, text="Chưa chọn file đầu ra", width=50, anchor="w", background="#ffffff")
output_file_label.pack(pady=5)
select_output_button = ttk.Button(frame_output, text="Chọn File Đầu Ra", command=select_output_file)
select_output_button.pack(pady=5)

# Nhập phạm vi tài khoản muốn tách
frame_range = ttk.LabelFrame(root, text="Nhập Phạm Vi Tài Khoản", padding="20")
frame_range.pack(fill="both", padx=10, pady=10)

start_label = ttk.Label(frame_range, text="Từ tài khoản số: ", width=50, anchor="w")
start_label.pack(pady=5)
start_entry = ttk.Entry(frame_range, width=20)
start_entry.pack(pady=5)

end_label = ttk.Label(frame_range, text="Đến tài khoản số: ", width=50, anchor="w")
end_label.pack(pady=5)
end_entry = ttk.Entry(frame_range, width=20)
end_entry.pack(pady=5)

# Nút tách tài khoản và xóa trùng
button_frame = ttk.Frame(root)
button_frame.pack(pady=10)

split_button = ttk.Button(button_frame, text="Tách Tài Khoản", command=split_accounts)
split_button.grid(row=0, column=0, padx=5)

remove_duplicates_button = ttk.Button(button_frame, text="Xóa Tài Khoản Trùng", command=remove_duplicates_from_file)
remove_duplicates_button.grid(row=0, column=1, padx=5)

# Chạy giao diện
root.mainloop()
